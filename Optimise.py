
from PIL import Image
from numpy import asarray
from Line_creation import *
from Colour_functions import *
from Edge_detection import *
from Edge_processing import *
from Segments import *

# Schema
# define randomised parameters
# call function(s) multiple times with said parameters
# Score function against desrired output for each trial
# report best score accuracy and parameters utilised.

img = Image.open(r'C:\Users\Stude\OneDrive\Pictures\Image-Analysis\Shapes.jpg')
numpydata = asarray(img)

trial_limit = 20

target_outlines_xys = [
    # triangle
    [544, 52], [545, 52], [545, 53], [546, 54], [547, 55], [547, 56], [548, 57], [549, 58], [549, 59], [550, 60], [550, 61], [551, 62], [551, 63],
    [552, 64], [553, 65], [553, 66], [554, 67], [554, 68], [555, 69], [555, 70], [556, 71], [557, 72], [557, 73], [558, 74], [558, 75], [559, 76], 
    [559, 77], [560, 78], [561, 79], [561, 80], [562, 81], [563, 82], [563, 83], [564, 84], [564, 85], [565, 86], [565, 87], [566, 88], [567, 89], 
    [567, 90], [568, 91], [568, 92], [569, 93], [569, 94], [570, 95], [571, 96], [571, 97], [572, 98], [572, 99], [573, 100], [573, 101], [574, 102],
    [575, 103], [575, 104], [576, 105], [576, 106], [577, 107], [577, 108], [578, 109], [579, 110], [579, 111], [580, 112], [580, 113], [581, 114], 
    [582, 115], [582, 116], [583, 117], [583, 118], [584, 119], [585, 120], [585, 121], [586, 122], [586, 123], [587, 124], [588, 125], [588, 126], 
    [589, 127], [589, 128], [590, 129], [590, 130], [591, 131], [592, 132], [592, 133], [593, 134], [593, 135], [594, 136], [594, 137], [595, 138], 
    [596, 139], [596, 140], [597, 141], [597, 142], [598, 143], [599, 144], [599, 145], [600, 146], [600, 147], [601, 148], [601, 149], [602, 150], 
    [603, 151], [603, 152], [604, 153], [604, 154], [605, 155], [605, 156], [606, 157], [607, 158], [607, 159], [608, 160], [608, 161], [609, 162], 
    [610, 163], [610, 164], [611, 165], [611, 166], [612, 167], [613, 168], [613, 169], [614, 170], [614, 171], [615, 172], [615, 173], [616, 174], 
    [617, 175], [617, 176], [618, 177], [618, 178], [619, 179], [619, 180], [620, 181], [621, 182], [621, 183], [620, 184], [619, 184], [618, 184],
    [621, 184], 
    [617, 184], [616, 184], [615, 184], [614, 184], [613, 184], [612, 184], [611, 184], [610, 184], [609, 184], [608, 184], [607, 184], [606, 184], 
    [605, 184], [604, 184], [603, 184], [602, 184], [601, 184], [600, 184], [599, 184], [598, 184], [597, 184], [596, 184], [595, 184], [594, 184], 
    [593, 184], [592, 184], [591, 184], [590, 184], [589, 184], [588, 184], [587, 184], [586, 184], [585, 184], [584, 184], [583, 184], [582, 184], 
    [581, 184], [580, 184], [579, 184], [578, 184], [577, 184], [576, 184], [575, 184], [574, 184], [573, 184], [572, 184], [571, 184], [570, 184], 
    [569, 184], [568, 184], [567, 184], [566, 184], [565, 184], [564, 184], [563, 184], [562, 184], [561, 184], [560, 184], [559, 184], [558, 184], 
    [557, 184], [556, 184], [555, 184], [554, 184], [553, 184], [552, 184], [551, 184], [550, 184], [549, 184], [548, 184], [547, 184], [546, 184], 
    [545, 184], [544, 184], [543, 184], [542, 184], [541, 184], [540, 184], [539, 184], [538, 184], [537, 184], [536, 184], [535, 184], [534, 184], 
    [533, 184], [532, 184], [531, 184], [530, 184], [529, 184], [528, 184], [527, 184], [526, 184], [525, 184], [524, 184], [523, 184], [522, 184], 
    [521, 184], [520, 184], [519, 184], [518, 184], [517, 184], [516, 184], [515, 184], [514, 184], [513, 184], [512, 184], [511, 184], [510, 184], 
    [509, 184], [508, 184], [507, 184], [506, 184], [505, 184], [504, 184], [503, 184], [502, 184], [501, 184], [500, 184], [499, 184], [498, 184], 
    [497, 184], [496, 184], [495, 184], [494, 184], [493, 184], [492, 184], [491, 184], [490, 184], [489, 184], [488, 184], [487, 184], [486, 184], 
    [485, 184], [484, 184], [483, 184], [482, 184], [481, 184], [480, 184], [479, 184], [478, 184], [477, 184], [476, 184], [475, 184], [474, 184], 
    [473, 184], [472, 184], [471, 184], [470, 184], [469, 184], [469, 183], [470, 182], [470, 181], [471, 180], [472, 179], [472, 178], [473, 177], 
    [473, 176], [474, 175], [474, 174], [475, 173], [476, 172], [476, 171], [477, 170], [477, 169], [478, 168], [478, 167], [479, 166], [479, 165], 
    [480, 164], [481, 163], [481, 162], [482, 161], [482, 160], [483, 159], [483, 158], [484, 157], [485, 156], [485, 155], [486, 154], [486, 153], 
    [487, 152], [488, 151], [488, 150], [489, 149], [489, 148], [490, 147], [490, 146], [491, 145], [491, 144], [492, 143], [493, 142], [493, 141], 
    [494, 140], [494, 139], [495, 138], [496, 137], [496, 136], [497, 135], [497, 134], [498, 133], [498, 132], [499, 131], [500, 130], [500, 129], 
    [501, 128], [501, 127], [502, 126], [502, 125], [503, 124], [504, 123], [504, 122], [505, 121], [505, 120], [506, 119], [506, 118], [507, 117], 
    [508, 116], [508, 115], [509, 114], [509, 113], [510, 112], [510, 111], [511, 110], [512, 109], [512, 108], [513, 107], [513, 106], [514, 105], 
    [514, 104], [515, 103], [516, 102], [516, 101], [517, 100], [517, 99], [518, 98], [518, 97], [519, 96], [520, 95], [520, 94], [521, 93], [521, 92], 
    [522, 91], [522, 90], [523, 89], [524, 88], [524, 87], [525, 86], [525, 85], [526, 84], [526, 83], [527, 82], [528, 81], [528, 80], [529, 79], 
    [529, 78], [530, 77], [530, 76], [531, 75], [532, 74], [532, 73], [533, 72], [533, 71], [534, 70], [535, 69], [535, 68], [536, 67], [536, 66], 
    [537, 65], [537, 64], [538, 63], [539, 62], [539, 61], [540, 60], [540, 59], [541, 58], [541, 57], [542, 56], [543, 55], [543, 54], [544, 53], 
    [544, 52],
    # square
    [86, 181], [198, 181],
    [86, 69], [87, 69], [88, 69], [89, 69], [90, 69], [91, 69], [92, 69], [93, 69], [94, 69], [95, 69], [96, 69], [97, 69], [98, 69], [99, 69], 
    [100, 69], [101, 69], [102, 69], [103, 69], [104, 69], [105, 69], [106, 69], [107, 69], [108, 69], [109, 69], [110, 69], [111, 69], [112, 69], 
    [113, 69], [114, 69], [115, 69], [116, 69], [117, 69], [118, 69], [119, 69], [120, 69], [121, 69], [122, 69], [123, 69], [124, 69], [125, 69], 
    [126, 69], [127, 69], [128, 69], [129, 69], [130, 69], [131, 69], [132, 69], [133, 69], [134, 69], [135, 69], [136, 69], [137, 69], [138, 69], 
    [139, 69], [140, 69], [141, 69], [142, 69], [143, 69], [144, 69], [145, 69], [146, 69], [147, 69], [148, 69], [149, 69], [150, 69], [151, 69], 
    [152, 69], [153, 69], [154, 69], [155, 69], [156, 69], [157, 69], [158, 69], [159, 69], [160, 69], [161, 69], [162, 69], [163, 69], [164, 69], 
    [165, 69], [166, 69], [167, 69], [168, 69], [169, 69], [170, 69], [171, 69], [172, 69], [173, 69], [174, 69], [175, 69], [176, 69], [177, 69], 
    [178, 69], [179, 69], [180, 69], [181, 69], [182, 69], [183, 69], [184, 69], [185, 69], [186, 69], [187, 69], [188, 69], [189, 69], [190, 69], 
    [191, 69], [192, 69], [193, 69], [194, 69], [195, 69], [196, 69], [197, 69], [198, 69], [198, 70], [198, 71], [198, 72], [198, 73], [198, 74], 
    [198, 75], [198, 76], [198, 77], [198, 78], [198, 79], [198, 80], [198, 81], [198, 82], [198, 83], [198, 84], [198, 85], [198, 86], [198, 87], 
    [198, 88], [198, 89], [198, 90], [198, 91], [198, 92], [198, 93], [198, 94], [198, 95], [198, 96], [198, 97], [198, 98], [198, 99], [198, 100], 
    [198, 101], [198, 102], [198, 103], [198, 104], [198, 105], [198, 106], [198, 107], [198, 108], [198, 109], [198, 110], [198, 111], [198, 112], 
    [198, 113], [198, 114], [198, 115], [198, 116], [198, 117], [198, 118], [198, 119], [198, 120], [198, 121], [198, 122], [198, 123], [198, 124], 
    [198, 125], [198, 126], [198, 127], [198, 128], [198, 129], [198, 130], [198, 131], [198, 132], [198, 133], [198, 134], [198, 135], [198, 136], 
    [198, 137], [198, 138], [198, 139], [198, 140], [198, 141], [198, 142], [198, 143], [198, 144], [198, 145], [198, 146], [198, 147], [198, 148], 
    [198, 149], [198, 150], [198, 151], [198, 152], [198, 153], [198, 154], [198, 155], [198, 156], [198, 157], [198, 158], [198, 159], [198, 160], 
    [198, 161], [198, 162], [198, 163], [198, 164], [198, 165], [198, 166], [198, 167], [198, 168], [198, 169], [198, 170], [198, 171], [198, 172], 
    [198, 173], [198, 174], [198, 175], [198, 176], [198, 177], [198, 178], [198, 179], [198, 180], [197, 181], [196, 181], [195, 181], [194, 181], 
    [193, 181], [192, 181], [191, 181], [190, 181], [189, 181], [188, 181], [187, 181], [186, 181], [185, 181], [184, 181], [183, 181], [182, 181], 
    [181, 181], [180, 181], [179, 181], [178, 181], [177, 181], [176, 181], [175, 181], [174, 181], [173, 181], [172, 181], [171, 181], [170, 181], 
    [169, 181], [168, 181], [167, 181], [166, 181], [165, 181], [164, 181], [163, 181], [162, 181], [161, 181], [160, 181], [159, 181], [158, 181], 
    [157, 181], [156, 181], [155, 181], [154, 181], [153, 181], [152, 181], [151, 181], [150, 181], [149, 181], [148, 181], [147, 181], [146, 181], 
    [145, 181], [144, 181], [143, 181], [142, 181], [141, 181], [140, 181], [139, 181], [138, 181], [137, 181], [136, 181], [135, 181], [134, 181], 
    [133, 181], [132, 181], [131, 181], [130, 181], [129, 181], [128, 181], [127, 181], [126, 181], [125, 181], [124, 181], [123, 181], [122, 181], 
    [121, 181], [120, 181], [119, 181], [118, 181], [117, 181], [116, 181], [115, 181], [114, 181], [113, 181], [112, 181], [111, 181], [110, 181], 
    [109, 181], [108, 181], [107, 181], [106, 181], [105, 181], [104, 181], [103, 181], [102, 181], [101, 181], [100, 181], [99, 181], [98, 181], 
    [97, 181], [96, 181], [95, 181], [94, 181], [93, 181], [92, 181], [91, 181], [90, 181], [89, 181], [88, 181], [87, 181], [86, 180], [86, 179], 
    [86, 178], [86, 177], [86, 176], [86, 175], [86, 174], [86, 173], [86, 172], [86, 171], [86, 170], [86, 169], [86, 168], [86, 167], [86, 166], 
    [86, 165], [86, 164], [86, 163], [86, 162], [86, 161], [86, 160], [86, 159], [86, 158], [86, 157], [86, 156], [86, 155], [86, 154], [86, 153], 
    [86, 152], [86, 151], [86, 150], [86, 149], [86, 148], [86, 147], [86, 146], [86, 145], [86, 144], [86, 143], [86, 142], [86, 141], [86, 140], 
    [86, 139], [86, 138], [86, 137], [86, 136], [86, 135], [86, 134], [86, 133], [86, 132], [86, 131], [86, 130], [86, 129], [86, 128], [86, 127], 
    [86, 126], [86, 125], [86, 124], [86, 123], [86, 122], [86, 121], [86, 120], [86, 119], [86, 118], [86, 117], [86, 116], [86, 115], [86, 114], 
    [86, 113], [86, 112], [86, 111], [86, 110], [86, 109], [86, 108], [86, 107], [86, 106], [86, 105], [86, 104], [86, 103], [86, 102], [86, 101], 
    [86, 100], [86, 99], [86, 98], [86, 97], [86, 96], [86, 95], [86, 94], [86, 93], [86, 92], [86, 91], [86, 90], [86, 89], [86, 88], [86, 87], 
    [86, 86], [86, 85], [86, 84], [86, 83], [86, 82], [86, 81], [86, 80], [86, 79], [86, 78], [86, 77], [86, 76], [86, 75], [86, 74], [86, 73], 
    [86, 72], [86, 71], [86, 70], [86, 69],
    # 82 heart - "R"
    [566, 402], [567, 402], [568, 402], [569, 402], [570, 403], [571, 403], [572, 404], [572, 405], [573, 406], [573, 407], [573, 408], [573, 409], 
    [573, 410], [573, 411], [572, 412], [571, 413], [571, 414], [572, 415], [573, 416], [574, 417], [575, 418], [576, 419], [576, 420], [577, 421], 
    [576, 422], [575, 422], [575, 421], [574, 420], [573, 419], [572, 418], [571, 417], [570, 416], [569, 415], [568, 414], [567, 414], [566, 415], 
    [566, 416], [566, 417], [566, 418], [567, 419], [567, 420], [567, 421], [567, 422], [566, 423], [565, 422], [565, 421], [565, 420], [565, 419], 
    [565, 418], [565, 417], [564, 416], [564, 415], [564, 414], [564, 413], [564, 412], [564, 411], [564, 410], [565, 411], [566, 411], [567, 412], 
    [568, 412], [569, 412], [570, 411], [571, 410], [571, 409], [571, 408], [571, 407], [571, 406], [570, 405], [569, 404], [568, 404], [567, 404], 
    [566, 405], [565, 406], [565, 407], [565, 408], [565, 409], [565, 410], [564, 409], [563, 408], [563, 407], [563, 406], [563, 405], [563, 404], 
    [564, 403], [565, 403], [566, 402]
]
target_blank_xys = []

for trial in range(trial_limit):
    
    # define randomised parameters
    RGB_tolerance = 120
    singular_RGB_trigger = 50
    direction_weighting = [50, 40, 40, 30, 30, 20, 20]
    edges_prio_1_weighting = 125
    edges_prio_2_weighting = 60
    edges_prio_3_weighting = 30
    weighting_threshold = 300
    weighting_base = 200
    weighting_division_coefficient = 2
    rgb_delta_limit = 30
    centre_weighting_division_coefficient = 3
    weighting_base_cm = 200
    colour_match_limit = 20
    start_point_return_weighting = 5

    edges_lat, edges_vert, edges_diag_LR, edges_diag_RL = image_edge_detection(numpydata, RGB_tolerance, singular_RGB_trigger)

    edges_prio_1, edges_prio_2, edges_prio_3 = edge_prioritisation(numpydata, edges_lat, edges_vert, edges_diag_LR, edges_diag_RL)

    outlines = generate_outlines(numpydata, edges_prio_1, edges_prio_2, edges_prio_3, direction_weighting, 
                      edges_prio_1_weighting, edges_prio_2_weighting, edges_prio_3_weighting, weighting_threshold,
                      weighting_base, weighting_division_coefficient, rgb_delta_limit, centre_weighting_division_coefficient,
                      weighting_base_cm, colour_match_limit, start_point_return_weighting)